{"version":3,"sources":["../webpack/bootstrap","../external \"vscode\"","../external \"fs\"",".././src/actions/path.ts",".././src/actions/config.ts","../external \"os\"","../external \"path\"",".././src/extension.ts",".././src/actions/hosts.ts",".././src/actions/file.ts",".././node_modules/sudo-prompt/index.js","../external \"child_process\"","../external \"crypto\"","../external \"util\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","sysHostsDirString","process","platform","env","windir","sysHostsPathString","sysHostsDir","Uri","file","sysHostsPath","updateDefaultHosts","context","defaultHosts","readFileSync","path","globalState","update","getDefaultHosts","console","log","vscode","getConfigHosts","workspace","getConfiguration","getConfigSelected","setConfigSelected","selected","getSelectedConfig","configuration","workspaceConfig","selectedConfig","entries","forEach","configName","configValue","includes","map","domain","ip","join","disposableSaveConfig","commands","registerCommand","saveHosts","catch","err","window","showErrorMessage","message","disposableSelectedConfig","disposableUpdateDefaultHosts","subscriptions","push","fileString","writeElevated","configHosts","configSelected","quickPickItem","keys","host","label","picked","showQuickPick","canPickMany","pickItem","sudoPromptCopy","source","target","Promise","resolve","reject","promptOptions","icns","undefined","sudoCommand","appRoot","exec","error","stdout","stderr","content","tmpPath","tmpdir","Math","random","toString","replace","substr","writeFileSync","unlinkSync","Node","child","crypto","fs","os","util","Attempt","instance","end","callback","temp","Error","USER","UUID","uuid","Remove","dirname","errorRemove","options","parent","mkdir","zip","writeFile","APPLET","command","EscapeDoubleQuotes","encoding","MacApplet","readFile","buffer","MacIcon","test","MacPropertyList","script","cwd","MacCommand","binary","basename","MacOpen","code","PERMISSION_DENIED","parseInt","trim","MacResult","Mac","index","paths","length","stat","LinuxBinary","magic","maxBuffer","MAX_BUFFER","elevated","slice","NO_POLKIT_AGENT","Linux","pathElevate","pathExecute","pathCommand","pathStdout","pathStderr","pathStatus","WindowsWriteExecuteScript","WindowsWriteCommandScript","stdin","WindowsElevate","WindowsWaitForStatus","stats","size","setTimeout","WindowsResult","Windows","string","normalize","randomBytes","Date","now","hash","createHash","digest","ValidName","arguments","isObject","isFunction","title","JSON","stringify"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = require(\"vscode\");","module.exports = require(\"fs\");","import { Uri } from 'vscode'\r\n\r\nexport const sysHostsDirString = process.platform === 'win32' ? `${process.env.windir || 'C:\\\\WINDOWS'}\\\\system32\\\\drivers\\\\etc\\\\` : '/etc/';\r\nexport const sysHostsPathString = sysHostsDirString + 'hosts';\r\n// export const switchHostsConfigString = sysHostsPathString + 'hosts.switch-hosts.json'\r\n\r\nexport const sysHostsDir = Uri.file(sysHostsDirString)\r\nexport const sysHostsPath =Uri.file(sysHostsPathString)\r\n// export const switchHostsConfig =Uri.file(switchHostsConfigString)\r\n","import { readFileSync, existsSync, writeFileSync } from 'fs'\r\nimport * as vscode from 'vscode';\r\nimport { TextEncoder, TextDecoder } from 'text-encoding'\r\n\r\nimport * as path from './path'\r\n\r\nconst workspaceConfigName = 'switchHosts'\r\n\r\ninterface switchSySConfig {\r\n  default: string\r\n}\r\n\r\ninterface WorkspaceConfig {\r\n  [configName: string]: {\r\n    [domain: string]: string\r\n  }\r\n}\r\ninterface hostsConfig {\r\n  [configName: string]: string\r\n}\r\n\r\nexport const updateDefaultHosts = async (context: vscode.ExtensionContext) => {\r\n  const defaultHosts = readFileSync(path.sysHostsPathString, 'utf8')\r\n  await context.globalState.update('default', defaultHosts)\r\n  return defaultHosts\r\n}\r\n\r\nexport const getDefaultHosts = async (context: vscode.ExtensionContext) => {\r\n  let defaultHosts = context.globalState.get<string>('default');\r\n  console.log(vscode)\r\n  // vscode.commands.getCommands().then((r)=>\r\n  //   console.log(r))\r\n  // vscode.commands.executeCommand('workbench.action.files.save').then((r)=>{\r\n  //   console.log(r)\r\n  // })\r\n  if (!defaultHosts) {\r\n    defaultHosts = await updateDefaultHosts(context)\r\n  }\r\n  return defaultHosts\r\n}\r\n\r\nexport const getConfigHosts = () => {\r\n  const configuration = vscode.workspace.getConfiguration(workspaceConfigName)\r\n  const workspaceConfig = configuration.get('config') as WorkspaceConfig\r\n  return workspaceConfig\r\n}\r\nexport const getConfigSelected = () => {\r\n  const configuration = vscode.workspace.getConfiguration(workspaceConfigName)\r\n  const selected = configuration.get('selected') as Array<string>\r\n  return selected\r\n}\r\nexport const setConfigSelected = (selected: string[]) => {\r\n  const configuration = vscode.workspace.getConfiguration(workspaceConfigName)\r\n  return configuration.update('selected', selected)\r\n}\r\n\r\nexport const getSelectedConfig = (context: vscode.ExtensionContext) => {\r\n  const configuration = vscode.workspace.getConfiguration(workspaceConfigName)\r\n  const selected = configuration.get('selected') as Array<string>\r\n  \r\n  const workspaceConfig = configuration.get('config') as WorkspaceConfig\r\n  // TODO: reset fail selected\r\n  let selectedConfig = ''\r\n  Object.entries(workspaceConfig).forEach(([configName, configValue])=>{\r\n    if (selected.includes(configName)) {\r\n      selectedConfig += `# ${configName}\r\n${Object.entries(configValue).map(([domain, ip])=>`${ip} ${domain}`).join('\\n')}\r\n`\r\n    }\r\n  })\r\n\r\n  return selectedConfig\r\n}","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\nimport { saveHosts, selectedConfig } from './actions/hosts'\nimport { updateDefaultHosts } from './actions/config'\nimport * as path from './actions/path'\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"switch-hosts\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposableSaveConfig = vscode.commands.registerCommand('switch-hosts.saveConfig', ()=>{\n\t\t// The code you place here will be executed every time your command is executed\n\n\t\tsaveHosts(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\n\tlet disposableSelectedConfig = vscode.commands.registerCommand('switch-hosts.selectedConfig', async () => {\n\t\tselectedConfig(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\tlet disposableUpdateDefaultHosts = vscode.commands.registerCommand('switch-hosts.updateDefaultHosts', async () => {\n\t\tupdateDefaultHosts(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\tcontext.subscriptions.push(disposableSaveConfig, disposableSelectedConfig, disposableUpdateDefaultHosts);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","\r\nimport { writeFileSync } from 'fs'\r\nimport { join } from 'path';\r\nimport * as vscode from 'vscode'\r\nimport { TextEncoder } from 'text-encoding'\r\n\r\nimport * as path from './path'\r\nimport { getDefaultHosts, getSelectedConfig, getConfigHosts, setConfigSelected, getConfigSelected } from './config'\r\nimport { writeElevated } from './file'\r\n\r\nexport const saveHosts = async (context: vscode.ExtensionContext) => {\r\n  const defaultHosts = await getDefaultHosts(context)\r\nconst selectedConfig = getSelectedConfig(context)\r\nconst fileString = selectedConfig ? `${defaultHosts}\\n\r\n# from switch-hosts\r\n${selectedConfig}\r\n` : defaultHosts\r\n  \r\n  await writeElevated(path.sysHostsPathString, fileString)\r\n  // TODO: clean hosts cache\r\n  // vscode.workspace.fs.writeFile(path.sysHostsPath, new TextEncoder('utf-8').encode(fileString))\r\n}\r\n\r\nexport const selectedConfig = async (context: vscode.ExtensionContext) => {\r\n  const configHosts = getConfigHosts()\r\n  const configSelected = getConfigSelected()\r\n  const quickPickItem:vscode.QuickPickItem[] = Object.keys(configHosts)\r\n    .map(host => ({label:host, picked: configSelected.includes(host)}))\r\n\r\n  const selected = await vscode.window.showQuickPick(quickPickItem, {canPickMany: true}) || []\r\n  await setConfigSelected(selected.map(pickItem=>pickItem.label))\r\n  await saveHosts(context)\r\n}","import { tmpdir } from 'os';\r\nimport { join } from 'path';\r\nimport { writeFileSync, unlinkSync } from 'fs'\r\nimport { exec } from 'sudo-prompt';\r\nimport * as vscode from 'vscode'\r\n\r\nexport const sudoPromptCopy = async (source: string, target: string): Promise<void> => {\r\n\r\n  // load sudo-prompt module lazy\r\n  // const sudoPrompt = await import('sudo-prompt');\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    const promptOptions = {\r\n      name: 'switchHosts',\r\n      icns: undefined\r\n    };\r\n\r\n    // TODO: 添加 cliPath [`\"${this.environmentService.cliPath}\"`];\r\n    // https://github.com/microsoft/vscode/blob/21ce78cf25a7a3b82502f0fc9e764e7840b315b3/src/vs/platform/environment/node/environmentService.ts#L50\r\n    const sudoCommand: string[] = [`\"${join(vscode.env.appRoot, '..', '..', 'bin', 'code.cmd')}\"`];\r\n\r\n    // if (options && options.overwriteReadonly) {\r\n    //   sudoCommand.push('--file-chmod');\r\n    // }\r\n\r\n    sudoCommand.push('--file-write', `\"${source}\"`, `\"${target}\"`);\r\n\r\n    exec(sudoCommand.join(' '), promptOptions, (error: string, stdout: string, stderr: string) => {\r\n      if (error || stderr) {\r\n        reject(error || stderr);\r\n      } else {\r\n        resolve(undefined);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport const writeElevated = async (path: string, content: string) => {\r\n\r\n  //  ------ open and save by system text document start ---------\r\n  // let doc = await vscode.workspace.openTextDocument(path); // calls back into the provider\r\n  // const textEdit = await vscode.window.showTextDocument(doc, { preview: false });\r\n  // textEdit.hide()\r\n  // const range = new vscode.Range(doc.positionAt(0), doc.positionAt(doc.getText().length))\r\n  // textEdit.edit(editBuilder=>{\r\n  //   editBuilder.replace(range, content)\r\n  // })\r\n  // doc.save()\r\n  //  ------ open and save by system text document end ---------\r\n\r\n  // write into a tmp file first\r\n  const tmpPath = join(tmpdir(), `code-elevated-${Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 6)}`);\r\n  writeFileSync(tmpPath, content)\r\n\r\n  // sudo prompt copy\r\n  await sudoPromptCopy(tmpPath, path);\r\n\r\n  // clean up\r\n  // await rimraf(tmpPath);\r\n  unlinkSync(tmpPath);\r\n  // return this.fileService.resolve(resource, { resolveMetadata: true });\r\n}\r\n\r\n","var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\n\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\n\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  if (typeof options.env !== 'undefined') {\n    if (typeof options.env !== 'object') {\n      return end(new Error('options.env must be an object if provided.'));\n    } else if (Object.keys(options.env).length === 0) {\n      return end(new Error('options.env must not be empty if provided.'));\n    } else {\n      for (var key in options.env) {\n        var value = options.env[key];\n        if (typeof key !== 'string' || typeof value !== 'string') {\n          return end(\n            new Error('options.env environment variables must be strings.')\n          );\n        }\n        // \"Environment variable names used by the utilities in the Shell and\n        // Utilities volume of IEEE Std 1003.1-2001 consist solely of uppercase\n        // letters, digits, and the '_' (underscore) from the characters defined\n        // in Portable Character Set and do not begin with a digit. Other\n        // characters may be permitted by an implementation; applications shall\n        // tolerate the presence of such names.\"\n        if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(key)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable name: ' +\n              JSON.stringify(key)\n            )\n          );\n        }\n        if (/[\\r\\n]/.test(value)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable value: ' +\n              JSON.stringify(value)\n            )\n          );\n        }\n      }\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\n\nfunction Linux(instance, end) {\n  LinuxBinary(instance,\n    function(error, binary) {\n      if (error) return end(error);\n      var command = [];\n      // Preserve current working directory:\n      command.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\";');\n      // Export environment variables:\n      for (var key in instance.options.env) {\n        var value = instance.options.env[key];\n        command.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\";');\n      }\n      command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n      if (/kdesudo/i.test(binary)) {\n        command.push(\n          '--comment',\n          '\"' + instance.options.name + ' wants to make changes. ' +\n          'Enter your password to allow this.\"'\n        );\n        command.push('-d'); // Do not show the command to be run in the dialog.\n        command.push('--');\n      } else if (/pkexec/i.test(binary)) {\n        command.push('--disable-internal-agent');\n      }\n      var magic = 'SUDOPROMPT\\n';\n      command.push(\n        '/bin/bash -c \"echo ' + EscapeDoubleQuotes(magic.trim()) + '; ' +\n        EscapeDoubleQuotes(instance.command) +\n        '\"'\n      );\n      command = command.join(' ');\n      Node.child.exec(command, { encoding: 'utf-8', maxBuffer: MAX_BUFFER },\n        function(error, stdout, stderr) {\n          // ISSUE 88:\n          // We must distinguish between elevation errors and command errors.\n          //\n          // KDESUDO:\n          // kdesudo provides no way to do this. We add a magic marker to know\n          // if elevation succeeded. Any error thereafter is a command error.\n          //\n          // PKEXEC:\n          // \"Upon successful completion, the return value is the return value of\n          // PROGRAM. If the calling process is not authorized or an\n          // authorization could not be obtained through authentication or an\n          // error occured, pkexec exits with a return value of 127. If the\n          // authorization could not be obtained because the user dismissed the\n          // authentication dialog, pkexec exits with a return value of 126.\"\n          //\n          // However, we do not rely on pkexec's return of 127 since our magic\n          // marker is more reliable, and we already use it for kdesudo.\n          var elevated = stdout && stdout.slice(0, magic.length) === magic;\n          if (elevated) stdout = stdout.slice(magic.length);\n          // Only normalize the error if it is definitely not a command error:\n          // In other words, if we know that the command was never elevated.\n          // We do not inspect error messages beyond NO_POLKIT_AGENT.\n          // We cannot rely on English errors because of internationalization.\n          if (error && !elevated) {\n            if (/No authentication agent found/.test(stderr)) {\n              error.message = NO_POLKIT_AGENT;\n            } else {\n              error.message = PERMISSION_DENIED;\n            }\n          }\n          end(error, stdout, stderr);\n        }\n      );\n    }\n  );\n}\n\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  // We used to prefer gksudo over pkexec since it enabled a better prompt.\n  // However, gksudo cannot run multiple commands concurrently.\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path,\n      function(error) {\n        if (error) {\n          if (error.code === 'ENOTDIR') return test();\n          if (error.code === 'ENOENT') return test();\n          end(error);\n        } else {\n          end(undefined, path);\n        }\n      }\n    );\n  }\n  test();\n}\n\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER; // Applet shell scripts require $USER.\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(\n        temp,\n        instance.uuid,\n        instance.options.name + '.app'\n      );\n      function end(error, stdout, stderr) {\n        Remove(Node.path.dirname(instance.path),\n          function(errorRemove) {\n            if (error) return callback(error);\n            if (errorRemove) return callback(errorRemove);\n            callback(undefined, stdout, stderr);\n          }\n        );\n      }\n      MacApplet(instance,\n        function(error, stdout, stderr) {\n          if (error) return end(error, stdout, stderr);\n          MacIcon(instance,\n            function(error) {\n              if (error) return end(error);\n              MacPropertyList(instance,\n                function(error, stdout, stderr) {\n                  if (error) return end(error, stdout, stderr);\n                  MacCommand(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      MacOpen(instance,\n                        function(error, stdout, stderr) {\n                          if (error) return end(error, stdout, stderr);\n                          MacResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent,\n    function(error) {\n      if (error) return end(error);\n      var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n      Node.fs.writeFile(zip, APPLET, 'base64',\n        function(error) {\n          if (error) return end(error);\n          var command = [];\n          command.push('/usr/bin/unzip');\n          command.push('-o'); // Overwrite any existing applet.\n          command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n          command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n          command = command.join(' ');\n          Node.child.exec(command, { encoding: 'utf-8' }, end);\n        }\n      );\n    }\n  );\n}\n\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(\n    instance.path,\n    'Contents',\n    'MacOS',\n    'sudo-prompt-command'\n  );\n  var script = [];\n  // Preserve current working directory:\n  // We do this for commands that rely on relative paths.\n  // This runs in a subshell and will not change the cwd of sudo-prompt-script.\n  script.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\"');\n  }\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\n\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns,\n    function(error, buffer) {\n      if (error) return end(error);\n      var icns = Node.path.join(\n        instance.path,\n        'Contents',\n        'Resources',\n        'applet.icns'\n      );\n      Node.fs.writeFile(icns, buffer, end);\n    }\n  );\n}\n\nfunction MacOpen(instance, end) {\n  // We must run the binary directly so that the cwd will apply.\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  // We must set the cwd so that the AppleScript can find the shell scripts.\n  var options = {\n    cwd: Node.path.dirname(binary),\n    encoding: 'utf-8'\n  };\n  // We use the relative path rather than the absolute path. The instance.path\n  // may contain spaces which the cwd can handle, but which exec() cannot.\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\n\nfunction MacPropertyList(instance, end) {\n  // Value must be in single quotes (not double quotes) according to man entry.\n  // e.g. defaults write com.companyname.appname \"Default Color\" '(255, 0, 0)'\n  // The defaults command will be changed in an upcoming major release to only\n  // operate on preferences domains. General plist manipulation utilities will\n  // be folded into a different command-line program.\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\"); // We must use single quotes for value.\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8',\n    function(error, code) {\n      if (error) {\n        if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n        end(error);\n      } else {\n        Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8',\n          function(error, stdout) {\n            if (error) return end(error);\n            Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8',\n              function(error, stderr) {\n                if (error) return end(error);\n                code = parseInt(code.trim(), 10); // Includes trailing newline.\n                if (code === 0) {\n                  end(undefined, stdout, stderr);\n                } else {\n                  error = new Error(\n                    'Command failed: ' + instance.command + '\\n' + stderr\n                  );\n                  error.code = code;\n                  end(error, stdout, stderr);\n                }\n              }\n            );\n          }\n        );\n      }\n    }\n  );\n}\n\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256,\n    function(error, random) {\n      if (error) random = Date.now() + '' + Math.random();\n      var hash = Node.crypto.createHash('SHA256');\n      hash.update('sudo-prompt-3');\n      hash.update(instance.options.name);\n      hash.update(instance.command);\n      hash.update(random);\n      var uuid = hash.digest('hex').slice(-32);\n      if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n        // This is critical to ensure we don't remove the wrong temp directory.\n        return end(new Error('Expected a valid UUID.'));\n      }\n      end(undefined, uuid);\n    }\n  );\n}\n\nfunction ValidName(string) {\n  // We use 70 characters as a limit to side-step any issues with Unicode\n  // normalization form causing a 255 character string to exceed the fs limit.\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\n\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(temp, instance.uuid);\n      if (/\"/.test(instance.path)) {\n        // We expect double quotes to be reserved on Windows.\n        // Even so, we test for this and abort if they are present.\n        return callback(\n          new Error('instance.path cannot contain double-quotes.')\n        );\n      }\n      instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n      instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n      instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n      instance.pathStdout = Node.path.join(instance.path, 'stdout');\n      instance.pathStderr = Node.path.join(instance.path, 'stderr');\n      instance.pathStatus = Node.path.join(instance.path, 'status');\n      Node.fs.mkdir(instance.path,\n        function(error) {\n          if (error) return callback(error);\n          function end(error, stdout, stderr) {\n            Remove(instance.path,\n              function(errorRemove) {\n                if (error) return callback(error);\n                if (errorRemove) return callback(errorRemove);\n                callback(undefined, stdout, stderr);\n              }\n            );\n          }\n          WindowsWriteExecuteScript(instance,\n            function(error) {\n              if (error) return end(error);\n              WindowsWriteCommandScript(instance,\n                function(error) {\n                  if (error) return end(error);\n                  WindowsElevate(instance,\n                    function(error, stdout, stderr) {\n                      if (error) return end(error, stdout, stderr);\n                      WindowsWaitForStatus(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          WindowsResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsElevate(instance, end) {\n  // We used to use this for executing elevate.vbs:\n  // var command = 'cscript.exe //NoLogo \"' + instance.pathElevate + '\"';\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  // Escape characters for cmd using double quotes:\n  // Escape characters for PowerShell using single quotes:\n  // Escape single quotes for PowerShell using backtick:\n  // See: https://ss64.com/ps/syntax-esc.html\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, { encoding: 'utf-8' },\n    function(error, stdout, stderr) {\n      // We used to return PERMISSION_DENIED only for error messages containing\n      // the string 'canceled by the user'. However, Windows internationalizes\n      // error messages (issue 96) so now we must assume all errors here are\n      // permission errors. This seems reasonable, given that we already run the\n      // user's command in a subshell.\n      if (error) return end(new Error(PERMISSION_DENIED), stdout, stderr);\n      end();\n    }\n  );\n  child.stdin.end(); // Otherwise PowerShell waits indefinitely on Windows 7.\n}\n\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8',\n    function(error, code) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStdout, 'utf-8',\n        function(error, stdout) {\n          if (error) return end(error);\n          Node.fs.readFile(instance.pathStderr, 'utf-8',\n            function(error, stderr) {\n              if (error) return end(error);\n              code = parseInt(code.trim(), 10);\n              if (code === 0) {\n                end(undefined, stdout, stderr);\n              } else {\n                error = new Error(\n                  'Command failed: ' + instance.command + '\\r\\n' + stderr\n                );\n                error.code = code;\n                end(error, stdout, stderr);\n              }\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsWaitForStatus(instance, end) {\n  // VBScript cannot wait for the elevated process to finish so we have to poll.\n  // VBScript cannot return error code if user does not grant permission.\n  // PowerShell can be used to elevate and wait on Windows 10.\n  // PowerShell can be used to elevate on Windows 7 but it cannot wait.\n  // powershell.exe Start-Process cmd.exe -Verb runAs -Wait\n  Node.fs.stat(instance.pathStatus,\n    function(error, stats) {\n      if ((error && error.code === 'ENOENT') || stats.size < 2) {\n        // Retry if file does not exist or is not finished writing.\n        // We expect a file size of 2. That should cover at least \"0\\r\".\n        // We use a 1 second timeout to keep a light footprint for long-lived\n        // sudo-prompt processes.\n        setTimeout(\n          function() {\n            // If administrator has no password and user clicks Yes, then\n            // PowerShell returns no error and execute (and command) never runs.\n            // We check that command output has been redirected to stdout file:\n            Node.fs.stat(instance.pathStdout,\n              function(error) {\n                if (error) return end(new Error(PERMISSION_DENIED));\n                WindowsWaitForStatus(instance, end);\n              }\n            );\n          },\n          1000\n        );\n      } else if (error) {\n        end(error);\n      } else {\n        end();\n      }\n    }\n  );\n}\n\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    // We expect double quotes to be reserved on Windows.\n    // Even so, we test for this and abort if they are present.\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  // Set code page to UTF-8:\n  script.push('chcp 65001>nul');\n  // Preserve current working directory:\n  // We pass /d as an option in case the cwd is on another drive (issue 70).\n  script.push('cd /d \"' + cwd + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    // \"The characters <, >, |, &, ^ are special command shell characters, and\n    // they must be preceded by the escape character (^) or enclosed in\n    // quotation marks. If you use quotation marks to enclose a string that\n    // contains one of the special characters, the quotation marks are set as\n    // part of the environment variable value.\"\n    // In other words, Windows assigns everything that follows the equals sign\n    // to the value of the variable, whereas Unix systems ignore double quotes.\n    var value = instance.options.env[key];\n    script.push('set ' + key + '=' + value.replace(/([<>\\\\|&^])/g, '^$1'));\n  }\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\n\nfunction WindowsWriteElevateScript(instance, end) {\n  // We do not use VBScript to elevate since it does not return an error if\n  // the user does not grant permission. This is here for reference.\n  // var script = [];\n  // script.push('Set objShell = CreateObject(\"Shell.Application\")');\n  // script.push(\n  // 'objShell.ShellExecute \"' + instance.pathExecute + '\", \"\", \"\", \"runas\", 0'\n  // );\n  // script = script.join('\\r\\n');\n  // Node.fs.writeFile(instance.pathElevate, script, 'utf-8', end);\n}\n\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push(\n    'call \"' + instance.pathCommand + '\"' +\n    ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"'\n  );\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\n\nmodule.exports.exec = Exec;\n\n// We used to expect that applet.app would be included with this module.\n// This could not be copied when sudo-prompt was packaged within an asar file.\n// We now store applet.app as a zip file in base64 within index.js instead.\n// To recreate: \"zip -r ../applet.zip Contents\" (with applet.app as CWD).\n// The zip file must not include applet.app as the root directory so that we\n// can extract it directly to the target app directory.\nvar APPLET = '';\n\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\n\n// See issue 66:\nvar MAX_BUFFER = 134217728;\n","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"util\");"],"sourceRoot":""}