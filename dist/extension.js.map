{"version":3,"sources":["../webpack/bootstrap",".././node_modules/sudo-prompt/index.js",".././src/actions/config.ts",".././src/actions/file.ts",".././src/actions/hosts.ts",".././src/actions/path.ts",".././src/actions/platform.ts",".././src/extension.ts","../external \"child_process\"","../external \"crypto\"","../external \"fs\"","../external \"os\"","../external \"path\"","../external \"util\"","../external \"vscode\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,SAAS,mBAAO,CAAC,oCAAe;AAChC,UAAU,mBAAO,CAAC,sBAAQ;AAC1B,MAAM,mBAAO,CAAC,cAAI;AAClB,MAAM,mBAAO,CAAC,cAAI;AAClB,QAAQ,mBAAO,CAAC,kBAAM;AACtB;AACA,QAAQ,mBAAO,CAAC,kBAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA,gCAAgC,2CAA2C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,4BAA4B,oBAAoB;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,4BAA4B,oBAAoB;AAChwCAAwC,oBAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AA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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/extension.ts\");\n","var Node = {\n  child: require('child_process'),\n  crypto: require('crypto'),\n  fs: require('fs'),\n  os: require('os'),\n  path: require('path'),\n  process: process,\n  util: require('util')\n};\n\nfunction Attempt(instance, end) {\n  var platform = Node.process.platform;\n  if (platform === 'darwin') return Mac(instance, end);\n  if (platform === 'linux') return Linux(instance, end);\n  if (platform === 'win32') return Windows(instance, end);\n  end(new Error('Platform not yet supported.'));\n}\n\nfunction EscapeDoubleQuotes(string) {\n  if (typeof string !== 'string') throw new Error('Expected a string.');\n  return string.replace(/\"/g, '\\\\\"');\n}\n\nfunction Exec() {\n  if (arguments.length < 1 || arguments.length > 3) {\n    throw new Error('Wrong number of arguments.');\n  }\n  var command = arguments[0];\n  var options = {};\n  var end = function() {};\n  if (typeof command !== 'string') {\n    throw new Error('Command should be a string.');\n  }\n  if (arguments.length === 2) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else if (Node.util.isFunction(arguments[1])) {\n      end = arguments[1];\n    } else {\n      throw new Error('Expected options or callback.');\n    }\n  } else if (arguments.length === 3) {\n    if (Node.util.isObject(arguments[1])) {\n      options = arguments[1];\n    } else {\n      throw new Error('Expected options to be an object.');\n    }\n    if (Node.util.isFunction(arguments[2])) {\n      end = arguments[2];\n    } else {\n      throw new Error('Expected callback to be a function.');\n    }\n  }\n  if (/^sudo/i.test(command)) {\n    return end(new Error('Command should not be prefixed with \"sudo\".'));\n  }\n  if (typeof options.name === 'undefined') {\n    var title = Node.process.title;\n    if (ValidName(title)) {\n      options.name = title;\n    } else {\n      return end(new Error('process.title cannot be used as a valid name.'));\n    }\n  } else if (!ValidName(options.name)) {\n    var error = '';\n    error += 'options.name must be alphanumeric only ';\n    error += '(spaces are allowed) and <= 70 characters.';\n    return end(new Error(error));\n  }\n  if (typeof options.icns !== 'undefined') {\n    if (typeof options.icns !== 'string') {\n      return end(new Error('options.icns must be a string if provided.'));\n    } else if (options.icns.trim().length === 0) {\n      return end(new Error('options.icns must not be empty if provided.'));\n    }\n  }\n  if (typeof options.env !== 'undefined') {\n    if (typeof options.env !== 'object') {\n      return end(new Error('options.env must be an object if provided.'));\n    } else if (Object.keys(options.env).length === 0) {\n      return end(new Error('options.env must not be empty if provided.'));\n    } else {\n      for (var key in options.env) {\n        var value = options.env[key];\n        if (typeof key !== 'string' || typeof value !== 'string') {\n          return end(\n            new Error('options.env environment variables must be strings.')\n          );\n        }\n        // \"Environment variable names used by the utilities in the Shell and\n        // Utilities volume of IEEE Std 1003.1-2001 consist solely of uppercase\n        // letters, digits, and the '_' (underscore) from the characters defined\n        // in Portable Character Set and do not begin with a digit. Other\n        // characters may be permitted by an implementation; applications shall\n        // tolerate the presence of such names.\"\n        if (!/^[a-zA-Z_][a-zA-Z0-9_]*$/.test(key)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable name: ' +\n              JSON.stringify(key)\n            )\n          );\n        }\n        if (/[\\r\\n]/.test(value)) {\n          return end(\n            new Error(\n              'options.env has an invalid environment variable value: ' +\n              JSON.stringify(value)\n            )\n          );\n        }\n      }\n    }\n  }\n  var platform = Node.process.platform;\n  if (platform !== 'darwin' && platform !== 'linux' && platform !== 'win32') {\n    return end(new Error('Platform not yet supported.'));\n  }\n  var instance = {\n    command: command,\n    options: options,\n    uuid: undefined,\n    path: undefined\n  };\n  Attempt(instance, end);\n}\n\nfunction Linux(instance, end) {\n  LinuxBinary(instance,\n    function(error, binary) {\n      if (error) return end(error);\n      var command = [];\n      // Preserve current working directory:\n      command.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\";');\n      // Export environment variables:\n      for (var key in instance.options.env) {\n        var value = instance.options.env[key];\n        command.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\";');\n      }\n      command.push('\"' + EscapeDoubleQuotes(binary) + '\"');\n      if (/kdesudo/i.test(binary)) {\n        command.push(\n          '--comment',\n          '\"' + instance.options.name + ' wants to make changes. ' +\n          'Enter your password to allow this.\"'\n        );\n        command.push('-d'); // Do not show the command to be run in the dialog.\n        command.push('--');\n      } else if (/pkexec/i.test(binary)) {\n        command.push('--disable-internal-agent');\n      }\n      var magic = 'SUDOPROMPT\\n';\n      command.push(\n        '/bin/bash -c \"echo ' + EscapeDoubleQuotes(magic.trim()) + '; ' +\n        EscapeDoubleQuotes(instance.command) +\n        '\"'\n      );\n      command = command.join(' ');\n      Node.child.exec(command, { encoding: 'utf-8', maxBuffer: MAX_BUFFER },\n        function(error, stdout, stderr) {\n          // ISSUE 88:\n          // We must distinguish between elevation errors and command errors.\n          //\n          // KDESUDO:\n          // kdesudo provides no way to do this. We add a magic marker to know\n          // if elevation succeeded. Any error thereafter is a command error.\n          //\n          // PKEXEC:\n          // \"Upon successful completion, the return value is the return value of\n          // PROGRAM. If the calling process is not authorized or an\n          // authorization could not be obtained through authentication or an\n          // error occured, pkexec exits with a return value of 127. If the\n          // authorization could not be obtained because the user dismissed the\n          // authentication dialog, pkexec exits with a return value of 126.\"\n          //\n          // However, we do not rely on pkexec's return of 127 since our magic\n          // marker is more reliable, and we already use it for kdesudo.\n          var elevated = stdout && stdout.slice(0, magic.length) === magic;\n          if (elevated) stdout = stdout.slice(magic.length);\n          // Only normalize the error if it is definitely not a command error:\n          // In other words, if we know that the command was never elevated.\n          // We do not inspect error messages beyond NO_POLKIT_AGENT.\n          // We cannot rely on English errors because of internationalization.\n          if (error && !elevated) {\n            if (/No authentication agent found/.test(stderr)) {\n              error.message = NO_POLKIT_AGENT;\n            } else {\n              error.message = PERMISSION_DENIED;\n            }\n          }\n          end(error, stdout, stderr);\n        }\n      );\n    }\n  );\n}\n\nfunction LinuxBinary(instance, end) {\n  var index = 0;\n  // We used to prefer gksudo over pkexec since it enabled a better prompt.\n  // However, gksudo cannot run multiple commands concurrently.\n  var paths = ['/usr/bin/kdesudo', '/usr/bin/pkexec'];\n  function test() {\n    if (index === paths.length) {\n      return end(new Error('Unable to find pkexec or kdesudo.'));\n    }\n    var path = paths[index++];\n    Node.fs.stat(path,\n      function(error) {\n        if (error) {\n          if (error.code === 'ENOTDIR') return test();\n          if (error.code === 'ENOENT') return test();\n          end(error);\n        } else {\n          end(undefined, path);\n        }\n      }\n    );\n  }\n  test();\n}\n\nfunction Mac(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  var user = Node.process.env.USER; // Applet shell scripts require $USER.\n  if (!user) return callback(new Error('env[\\'USER\\'] not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(\n        temp,\n        instance.uuid,\n        instance.options.name + '.app'\n      );\n      function end(error, stdout, stderr) {\n        Remove(Node.path.dirname(instance.path),\n          function(errorRemove) {\n            if (error) return callback(error);\n            if (errorRemove) return callback(errorRemove);\n            callback(undefined, stdout, stderr);\n          }\n        );\n      }\n      MacApplet(instance,\n        function(error, stdout, stderr) {\n          if (error) return end(error, stdout, stderr);\n          MacIcon(instance,\n            function(error) {\n              if (error) return end(error);\n              MacPropertyList(instance,\n                function(error, stdout, stderr) {\n                  if (error) return end(error, stdout, stderr);\n                  MacCommand(instance,\n                    function(error) {\n                      if (error) return end(error);\n                      MacOpen(instance,\n                        function(error, stdout, stderr) {\n                          if (error) return end(error, stdout, stderr);\n                          MacResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction MacApplet(instance, end) {\n  var parent = Node.path.dirname(instance.path);\n  Node.fs.mkdir(parent,\n    function(error) {\n      if (error) return end(error);\n      var zip = Node.path.join(parent, 'sudo-prompt-applet.zip');\n      Node.fs.writeFile(zip, APPLET, 'base64',\n        function(error) {\n          if (error) return end(error);\n          var command = [];\n          command.push('/usr/bin/unzip');\n          command.push('-o'); // Overwrite any existing applet.\n          command.push('\"' + EscapeDoubleQuotes(zip) + '\"');\n          command.push('-d \"' + EscapeDoubleQuotes(instance.path) + '\"');\n          command = command.join(' ');\n          Node.child.exec(command, { encoding: 'utf-8' }, end);\n        }\n      );\n    }\n  );\n}\n\nfunction MacCommand(instance, end) {\n  var path = Node.path.join(\n    instance.path,\n    'Contents',\n    'MacOS',\n    'sudo-prompt-command'\n  );\n  var script = [];\n  // Preserve current working directory:\n  // We do this for commands that rely on relative paths.\n  // This runs in a subshell and will not change the cwd of sudo-prompt-script.\n  script.push('cd \"' + EscapeDoubleQuotes(Node.process.cwd()) + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    var value = instance.options.env[key];\n    script.push('export ' + key + '=\"' + EscapeDoubleQuotes(value) + '\"');\n  }\n  script.push(instance.command);\n  script = script.join('\\n');\n  Node.fs.writeFile(path, script, 'utf-8', end);\n}\n\nfunction MacIcon(instance, end) {\n  if (!instance.options.icns) return end();\n  Node.fs.readFile(instance.options.icns,\n    function(error, buffer) {\n      if (error) return end(error);\n      var icns = Node.path.join(\n        instance.path,\n        'Contents',\n        'Resources',\n        'applet.icns'\n      );\n      Node.fs.writeFile(icns, buffer, end);\n    }\n  );\n}\n\nfunction MacOpen(instance, end) {\n  // We must run the binary directly so that the cwd will apply.\n  var binary = Node.path.join(instance.path, 'Contents', 'MacOS', 'applet');\n  // We must set the cwd so that the AppleScript can find the shell scripts.\n  var options = {\n    cwd: Node.path.dirname(binary),\n    encoding: 'utf-8'\n  };\n  // We use the relative path rather than the absolute path. The instance.path\n  // may contain spaces which the cwd can handle, but which exec() cannot.\n  Node.child.exec('./' + Node.path.basename(binary), options, end);\n}\n\nfunction MacPropertyList(instance, end) {\n  // Value must be in single quotes (not double quotes) according to man entry.\n  // e.g. defaults write com.companyname.appname \"Default Color\" '(255, 0, 0)'\n  // The defaults command will be changed in an upcoming major release to only\n  // operate on preferences domains. General plist manipulation utilities will\n  // be folded into a different command-line program.\n  var plist = Node.path.join(instance.path, 'Contents', 'Info.plist');\n  var path = EscapeDoubleQuotes(plist);\n  var key = EscapeDoubleQuotes('CFBundleName');\n  var value = instance.options.name + ' Password Prompt';\n  if (/'/.test(value)) {\n    return end(new Error('Value should not contain single quotes.'));\n  }\n  var command = [];\n  command.push('/usr/bin/defaults');\n  command.push('write');\n  command.push('\"' + path + '\"');\n  command.push('\"' + key + '\"');\n  command.push(\"'\" + value + \"'\"); // We must use single quotes for value.\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction MacResult(instance, end) {\n  var cwd = Node.path.join(instance.path, 'Contents', 'MacOS');\n  Node.fs.readFile(Node.path.join(cwd, 'code'), 'utf-8',\n    function(error, code) {\n      if (error) {\n        if (error.code === 'ENOENT') return end(new Error(PERMISSION_DENIED));\n        end(error);\n      } else {\n        Node.fs.readFile(Node.path.join(cwd, 'stdout'), 'utf-8',\n          function(error, stdout) {\n            if (error) return end(error);\n            Node.fs.readFile(Node.path.join(cwd, 'stderr'), 'utf-8',\n              function(error, stderr) {\n                if (error) return end(error);\n                code = parseInt(code.trim(), 10); // Includes trailing newline.\n                if (code === 0) {\n                  end(undefined, stdout, stderr);\n                } else {\n                  error = new Error(\n                    'Command failed: ' + instance.command + '\\n' + stderr\n                  );\n                  error.code = code;\n                  end(error, stdout, stderr);\n                }\n              }\n            );\n          }\n        );\n      }\n    }\n  );\n}\n\nfunction Remove(path, end) {\n  if (typeof path !== 'string' || !path.trim()) {\n    return end(new Error('Argument path not defined.'));\n  }\n  var command = [];\n  if (Node.process.platform === 'win32') {\n    if (/\"/.test(path)) {\n      return end(new Error('Argument path cannot contain double-quotes.'));\n    }\n    command.push('rmdir /s /q \"' + path + '\"');\n  } else {\n    command.push('/bin/rm');\n    command.push('-rf');\n    command.push('\"' + EscapeDoubleQuotes(Node.path.normalize(path)) + '\"');\n  }\n  command = command.join(' ');\n  Node.child.exec(command, { encoding: 'utf-8' }, end);\n}\n\nfunction UUID(instance, end) {\n  Node.crypto.randomBytes(256,\n    function(error, random) {\n      if (error) random = Date.now() + '' + Math.random();\n      var hash = Node.crypto.createHash('SHA256');\n      hash.update('sudo-prompt-3');\n      hash.update(instance.options.name);\n      hash.update(instance.command);\n      hash.update(random);\n      var uuid = hash.digest('hex').slice(-32);\n      if (!uuid || typeof uuid !== 'string' || uuid.length !== 32) {\n        // This is critical to ensure we don't remove the wrong temp directory.\n        return end(new Error('Expected a valid UUID.'));\n      }\n      end(undefined, uuid);\n    }\n  );\n}\n\nfunction ValidName(string) {\n  // We use 70 characters as a limit to side-step any issues with Unicode\n  // normalization form causing a 255 character string to exceed the fs limit.\n  if (!/^[a-z0-9 ]+$/i.test(string)) return false;\n  if (string.trim().length === 0) return false;\n  if (string.length > 70) return false;\n  return true;\n}\n\nfunction Windows(instance, callback) {\n  var temp = Node.os.tmpdir();\n  if (!temp) return callback(new Error('os.tmpdir() not defined.'));\n  UUID(instance,\n    function(error, uuid) {\n      if (error) return callback(error);\n      instance.uuid = uuid;\n      instance.path = Node.path.join(temp, instance.uuid);\n      if (/\"/.test(instance.path)) {\n        // We expect double quotes to be reserved on Windows.\n        // Even so, we test for this and abort if they are present.\n        return callback(\n          new Error('instance.path cannot contain double-quotes.')\n        );\n      }\n      instance.pathElevate = Node.path.join(instance.path, 'elevate.vbs');\n      instance.pathExecute = Node.path.join(instance.path, 'execute.bat');\n      instance.pathCommand = Node.path.join(instance.path, 'command.bat');\n      instance.pathStdout = Node.path.join(instance.path, 'stdout');\n      instance.pathStderr = Node.path.join(instance.path, 'stderr');\n      instance.pathStatus = Node.path.join(instance.path, 'status');\n      Node.fs.mkdir(instance.path,\n        function(error) {\n          if (error) return callback(error);\n          function end(error, stdout, stderr) {\n            Remove(instance.path,\n              function(errorRemove) {\n                if (error) return callback(error);\n                if (errorRemove) return callback(errorRemove);\n                callback(undefined, stdout, stderr);\n              }\n            );\n          }\n          WindowsWriteExecuteScript(instance,\n            function(error) {\n              if (error) return end(error);\n              WindowsWriteCommandScript(instance,\n                function(error) {\n                  if (error) return end(error);\n                  WindowsElevate(instance,\n                    function(error, stdout, stderr) {\n                      if (error) return end(error, stdout, stderr);\n                      WindowsWaitForStatus(instance,\n                        function(error) {\n                          if (error) return end(error);\n                          WindowsResult(instance, end);\n                        }\n                      );\n                    }\n                  );\n                }\n              );\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsElevate(instance, end) {\n  // We used to use this for executing elevate.vbs:\n  // var command = 'cscript.exe //NoLogo \"' + instance.pathElevate + '\"';\n  var command = [];\n  command.push('powershell.exe');\n  command.push('Start-Process');\n  command.push('-FilePath');\n  // Escape characters for cmd using double quotes:\n  // Escape characters for PowerShell using single quotes:\n  // Escape single quotes for PowerShell using backtick:\n  // See: https://ss64.com/ps/syntax-esc.html\n  command.push('\"\\'' + instance.pathExecute.replace(/'/g, \"`'\") + '\\'\"');\n  command.push('-WindowStyle hidden');\n  command.push('-Verb runAs');\n  command = command.join(' ');\n  var child = Node.child.exec(command, { encoding: 'utf-8' },\n    function(error, stdout, stderr) {\n      // We used to return PERMISSION_DENIED only for error messages containing\n      // the string 'canceled by the user'. However, Windows internationalizes\n      // error messages (issue 96) so now we must assume all errors here are\n      // permission errors. This seems reasonable, given that we already run the\n      // user's command in a subshell.\n      if (error) return end(new Error(PERMISSION_DENIED), stdout, stderr);\n      end();\n    }\n  );\n  child.stdin.end(); // Otherwise PowerShell waits indefinitely on Windows 7.\n}\n\nfunction WindowsResult(instance, end) {\n  Node.fs.readFile(instance.pathStatus, 'utf-8',\n    function(error, code) {\n      if (error) return end(error);\n      Node.fs.readFile(instance.pathStdout, 'utf-8',\n        function(error, stdout) {\n          if (error) return end(error);\n          Node.fs.readFile(instance.pathStderr, 'utf-8',\n            function(error, stderr) {\n              if (error) return end(error);\n              code = parseInt(code.trim(), 10);\n              if (code === 0) {\n                end(undefined, stdout, stderr);\n              } else {\n                error = new Error(\n                  'Command failed: ' + instance.command + '\\r\\n' + stderr\n                );\n                error.code = code;\n                end(error, stdout, stderr);\n              }\n            }\n          );\n        }\n      );\n    }\n  );\n}\n\nfunction WindowsWaitForStatus(instance, end) {\n  // VBScript cannot wait for the elevated process to finish so we have to poll.\n  // VBScript cannot return error code if user does not grant permission.\n  // PowerShell can be used to elevate and wait on Windows 10.\n  // PowerShell can be used to elevate on Windows 7 but it cannot wait.\n  // powershell.exe Start-Process cmd.exe -Verb runAs -Wait\n  Node.fs.stat(instance.pathStatus,\n    function(error, stats) {\n      if ((error && error.code === 'ENOENT') || stats.size < 2) {\n        // Retry if file does not exist or is not finished writing.\n        // We expect a file size of 2. That should cover at least \"0\\r\".\n        // We use a 1 second timeout to keep a light footprint for long-lived\n        // sudo-prompt processes.\n        setTimeout(\n          function() {\n            // If administrator has no password and user clicks Yes, then\n            // PowerShell returns no error and execute (and command) never runs.\n            // We check that command output has been redirected to stdout file:\n            Node.fs.stat(instance.pathStdout,\n              function(error) {\n                if (error) return end(new Error(PERMISSION_DENIED));\n                WindowsWaitForStatus(instance, end);\n              }\n            );\n          },\n          1000\n        );\n      } else if (error) {\n        end(error);\n      } else {\n        end();\n      }\n    }\n  );\n}\n\nfunction WindowsWriteCommandScript(instance, end) {\n  var cwd = Node.process.cwd();\n  if (/\"/.test(cwd)) {\n    // We expect double quotes to be reserved on Windows.\n    // Even so, we test for this and abort if they are present.\n    return end(new Error('process.cwd() cannot contain double-quotes.'));\n  }\n  var script = [];\n  script.push('@echo off');\n  // Set code page to UTF-8:\n  script.push('chcp 65001>nul');\n  // Preserve current working directory:\n  // We pass /d as an option in case the cwd is on another drive (issue 70).\n  script.push('cd /d \"' + cwd + '\"');\n  // Export environment variables:\n  for (var key in instance.options.env) {\n    // \"The characters <, >, |, &, ^ are special command shell characters, and\n    // they must be preceded by the escape character (^) or enclosed in\n    // quotation marks. If you use quotation marks to enclose a string that\n    // contains one of the special characters, the quotation marks are set as\n    // part of the environment variable value.\"\n    // In other words, Windows assigns everything that follows the equals sign\n    // to the value of the variable, whereas Unix systems ignore double quotes.\n    var value = instance.options.env[key];\n    script.push('set ' + key + '=' + value.replace(/([<>\\\\|&^])/g, '^$1'));\n  }\n  script.push(instance.command);\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathCommand, script, 'utf-8', end);\n}\n\nfunction WindowsWriteElevateScript(instance, end) {\n  // We do not use VBScript to elevate since it does not return an error if\n  // the user does not grant permission. This is here for reference.\n  // var script = [];\n  // script.push('Set objShell = CreateObject(\"Shell.Application\")');\n  // script.push(\n  // 'objShell.ShellExecute \"' + instance.pathExecute + '\", \"\", \"\", \"runas\", 0'\n  // );\n  // script = script.join('\\r\\n');\n  // Node.fs.writeFile(instance.pathElevate, script, 'utf-8', end);\n}\n\nfunction WindowsWriteExecuteScript(instance, end) {\n  var script = [];\n  script.push('@echo off');\n  script.push(\n    'call \"' + instance.pathCommand + '\"' +\n    ' > \"' + instance.pathStdout + '\" 2> \"' + instance.pathStderr + '\"'\n  );\n  script.push('(echo %ERRORLEVEL%) > \"' + instance.pathStatus + '\"');\n  script = script.join('\\r\\n');\n  Node.fs.writeFile(instance.pathExecute, script, 'utf-8', end);\n}\n\nmodule.exports.exec = Exec;\n\n// We used to expect that applet.app would be included with this module.\n// This could not be copied when sudo-prompt was packaged within an asar file.\n// We now store applet.app as a zip file in base64 within index.js instead.\n// To recreate: \"zip -r ../applet.zip Contents\" (with applet.app as CWD).\n// The zip file must not include applet.app as the root directory so that we\n// can extract it directly to the target app directory.\nvar APPLET = '';\n\nvar PERMISSION_DENIED = 'User did not grant permission.';\nvar NO_POLKIT_AGENT = 'No polkit authentication agent found.';\n\n// See issue 66:\nvar MAX_BUFFER = 134217728;\n","import { readFileSync, existsSync, writeFileSync } from 'fs'\r\nimport * as vscode from 'vscode';\r\nimport { TextEncoder, TextDecoder } from 'text-encoding'\r\n\r\nimport * as path from './path'\r\n\r\nconst workspaceConfigName = 'switchHosts'\r\n\r\ninterface switchSySConfig {\r\n  default: string\r\n}\r\n\r\ninterface WorkspaceConfig {\r\n  [configName: string]: {\r\n    [domain: string]: string\r\n  }\r\n}\r\ninterface hostsConfig {\r\n  [configName: string]: string\r\n}\r\n\r\nexport const updateDefaultHosts = async (context: vscode.ExtensionContext) => {\r\n  const defaultHosts = readFileSync(path.sysHostsPathString, 'utf8')\r\n  await context.globalState.update('default', defaultHosts)\r\n  return defaultHosts\r\n}\r\n\r\nexport const getDefaultHosts = async (context: vscode.ExtensionContext) => {\r\n  let defaultHosts = context.globalState.get<string>('default');\r\n  // vscode.commands.getCommands().then((r)=>\r\n  //   console.log(r))\r\n  // vscode.commands.executeCommand('workbench.action.files.save').then((r)=>{\r\n  //   console.log(r)\r\n  // })\r\n  if (!defaultHosts) {\r\n    defaultHosts = await updateDefaultHosts(context)\r\n  }\r\n  return defaultHosts\r\n}\r\n\r\nexport const getConfigHosts = () => {\r\n  const configuration = getVscodeSwitchHostsConfig()\r\n  const workspaceConfig = configuration.get<WorkspaceConfig>('config') || {}\r\n  return workspaceConfig\r\n}\r\nexport const getConfigSelected = () => {\r\n  const configuration = getVscodeSwitchHostsConfig()\r\n  const selected = configuration.get<string[]>('selected') || []\r\n  return selected\r\n}\r\nexport const setConfigSelected = (selected: string[]) => {\r\n  const configuration = getVscodeSwitchHostsConfig()\r\n  return configuration.update('selected', selected)\r\n}\r\n\r\nexport const getSelectedConfig = (selected:string[]) => {\r\n  const configuration = getVscodeSwitchHostsConfig()\r\n  \r\n  const workspaceConfig = configuration.get<WorkspaceConfig>('config') || {}\r\n  // TODO: reset fail selected\r\n  let selectedConfig = ''\r\n  Object.entries(workspaceConfig).forEach(([configName, configValue])=>{\r\n    if (selected.includes(configName)) {\r\n      selectedConfig += `# ${configName}\r\n${Object.entries(configValue).map(([domain, ip])=>`${ip} ${domain}`).join('\\n')}\r\n`\r\n    }\r\n  })\r\n\r\n  return selectedConfig\r\n}\r\n\r\nconst getVscodeSwitchHostsConfig = () => {\r\n  return vscode.workspace.getConfiguration(workspaceConfigName);\r\n}\r\n","import { tmpdir } from 'os';\r\nimport { join, dirname } from 'path';\r\nimport { writeFileSync, unlinkSync } from 'fs'\r\nimport { exec } from 'sudo-prompt';\r\nimport * as vscode from 'vscode'\r\n\r\nimport {isWindows, isLinux} from './platform'\r\n\r\nconst sudoPromptCopy = async (source: string, target: string): Promise<void> => {\r\n\r\n  // load sudo-prompt module lazy\r\n  // const sudoPrompt = await import('sudo-prompt');\r\n\r\n  return new Promise<void>((resolve, reject) => {\r\n    const promptOptions = {\r\n      name: 'switchHosts',\r\n      icns: undefined\r\n    };\r\n\r\n    // TODO: add cliPath [`\"${this.environmentService.cliPath}\"`];\r\n    // https://github.com/microsoft/vscode/blob/21ce78cf25a7a3b82502f0fc9e764e7840b315b3/src/vs/platform/environment/node/environmentService.ts#L50\r\n    const sudoCommand: string[] = [`\"${cliPath}\"`];\r\n\r\n    // if (options && options.overwriteReadonly) {\r\n    //   sudoCommand.push('--file-chmod');\r\n    // }\r\n\r\n    sudoCommand.push('--file-write', `\"${source}\"`, `\"${target}\"`);\r\n\r\n    exec(sudoCommand.join(' '), promptOptions, (error: string, stdout: string, stderr: string) => {\r\n      if (error || stderr) {\r\n        reject(error || stderr);\r\n      } else {\r\n        resolve(undefined);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport const writeElevated = async (path: string, content: string) => {\r\n\r\n  //  ------ open and save by system text document start ---------\r\n  // let doc = await vscode.workspace.openTextDocument(path); // calls back into the provider\r\n  // const textEdit = await vscode.window.showTextDocument(doc, { preview: false });\r\n  // textEdit.hide()\r\n  // const range = new vscode.Range(doc.positionAt(0), doc.positionAt(doc.getText().length))\r\n  // textEdit.edit(editBuilder=>{\r\n  //   editBuilder.replace(range, content)\r\n  // })\r\n  // doc.save()\r\n  //  ------ open and save by system text document end ---------\r\n\r\n  // write into a tmp file first\r\n  const tmpPath = join(tmpdir(), `code-elevated-${Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 6)}`);\r\n  writeFileSync(tmpPath, content)\r\n\r\n  // sudo prompt copy\r\n  await sudoPromptCopy(tmpPath, path);\r\n\r\n  // clean up\r\n  // await rimraf(tmpPath);\r\n  unlinkSync(tmpPath);\r\n  // return this.fileService.resolve(resource, { resolveMetadata: true });\r\n}\r\n\r\nconst  getPathFromAmdModule = (requirefn: typeof require, relativePath: string): string =>{\r\n\treturn getUriFromAmdModule(requirefn, relativePath).fsPath;\r\n}\r\n\r\nconst getUriFromAmdModule = (requirefn: any, relativePath: string): vscode.Uri => {\r\n\treturn vscode.Uri.parse(requirefn.toUrl(relativePath));\r\n}\r\n\r\nconst isBuilt = !process.env['VSCODE_DEV']\r\n// const appRoot = dirname(getPathFromAmdModule(require, ''))\r\nconst appRoot = process.cwd() // TODO: need check appRoot, see above\r\nconst execPath = process.execPath\r\n\r\n\r\nconst getApplicationName = () => {\r\n  if(vscode.env.appName.toLowerCase().indexOf('insiders') > -1){\r\n    return 'code-insiders'\r\n  }\r\n  return 'code'\r\n}\r\n\r\nconst getCLIPath = (execPath: string, appRoot: string, isBuilt: boolean): string => {\r\n\r\n\t// Windows\r\n\tif (isWindows) {\r\n\t\tif (isBuilt) {\r\n\t\t\treturn join(dirname(execPath), 'bin', `${getApplicationName()}.cmd`); // \r\n\t\t}\r\n\r\n\t\treturn join(appRoot, 'scripts', 'code-cli.bat');\r\n\t}\r\n\r\n\t// Linux\r\n\tif (isLinux) {\r\n\t\tif (isBuilt) {\r\n\t\t\treturn join(dirname(execPath), 'bin', `${getApplicationName()}`); // \r\n\t\t}\r\n\r\n\t\treturn join(appRoot, 'scripts', 'code-cli.sh');\r\n\t}\r\n\r\n\t// macOS\r\n\tif (isBuilt) {\r\n\t\treturn join(appRoot, 'bin', 'code');\r\n\t}\r\n\r\n\treturn join(appRoot, 'scripts', 'code-cli.sh');\r\n}\r\n\r\nconst cliPath = getCLIPath(execPath, appRoot, isBuilt)\r\n","\r\nimport { writeFileSync } from 'fs'\r\nimport { join } from 'path';\r\nimport * as vscode from 'vscode'\r\nimport { TextEncoder } from 'text-encoding'\r\n\r\nimport * as path from './path'\r\nimport { getDefaultHosts, getSelectedConfig, getConfigHosts, setConfigSelected, getConfigSelected } from './config'\r\nimport { writeElevated } from './file'\r\nimport { clearDNSCache } from './cache'\r\n\r\nexport const saveHosts = async (context: vscode.ExtensionContext) => {\r\n  const defaultHosts = await getDefaultHosts(context)\r\n  const configSelected = getConfigSelected()\r\n  const selectedConfig = getSelectedConfig(configSelected)\r\n  const fileString = selectedConfig ? `${defaultHosts}\\n\r\n# from switch-hosts\r\n${selectedConfig}\r\n` : defaultHosts\r\n  \r\n  await writeElevated(path.sysHostsPathString, fileString).then(()=> {\r\n    vscode.window.showInformationMessage(`save hosts: ${configSelected.join(',')} sucess`, 'view').then(value => {\r\n      if (value === 'view') {\r\n        openSysHostsFile()\r\n      }\r\n    })\r\n  }, (err: Error) =>{\r\n    console.log(err)\r\n    vscode.window.showErrorMessage('write system hosts failed')\r\n    return Promise.reject(err)\r\n  })\r\n  // clearDNSCache()\r\n}\r\n\r\nexport const selectedConfig = async (context: vscode.ExtensionContext) => {\r\n  const configHosts = getConfigHosts()\r\n  const configSelected = getConfigSelected()\r\n  const quickPickItem:vscode.QuickPickItem[] = Object.keys(configHosts)\r\n    .map(host => ({label:host, picked: configSelected.includes(host)}))\r\n\r\n  const selected = await vscode.window.showQuickPick(quickPickItem,\r\n    {placeHolder: 'Select the configs to switch', canPickMany: true })\r\n  console.log(selected)\r\n  if (!selected) return\r\n  await setConfigSelected(selected.map(pickItem=>pickItem.label))\r\n  await saveHosts(context)\r\n}\r\n\r\nexport const openSysHostsFile = () => {\r\n  vscode.workspace.openTextDocument(path.sysHostsPathString).then(document => {\r\n    vscode.window.showTextDocument(document);\r\n  }, error => {\r\n      return vscode.window.showErrorMessage(\"fastHosts: \" + error.message);\r\n  });\r\n}","import { Uri } from 'vscode'\r\n\r\nexport const sysHostsDirString = process.platform === 'win32' ? `${process.env.windir || 'C:\\\\WINDOWS'}\\\\system32\\\\drivers\\\\etc\\\\` : '/etc/';\r\nexport const sysHostsPathString = sysHostsDirString + 'hosts';\r\n// export const switchHostsConfigString = sysHostsPathString + 'hosts.switch-hosts.json'\r\n\r\nexport const sysHostsDir = Uri.file(sysHostsDirString)\r\nexport const sysHostsPath =Uri.file(sysHostsPathString)\r\n// export const switchHostsConfig =Uri.file(switchHostsConfigString)\r\n","\r\nlet _isWindows = false;\r\nlet _isLinux = false;\r\nlet _userAgent: string | undefined = undefined;\r\n\r\nexport interface IProcessEnvironment {\r\n\t[key: string]: string;\r\n}\r\n\r\ninterface INodeProcess {\r\n\tplatform: string;\r\n\tenv: IProcessEnvironment;\r\n\tgetuid(): number;\r\n\tnextTick: Function;\r\n\tversions?: {\r\n\t\telectron?: string;\r\n\t};\r\n\ttype?: string;\r\n}\r\ndeclare const process: INodeProcess;\r\n\r\ninterface INavigator {\r\n\tuserAgent: string;\r\n\tlanguage: string;\r\n\tmaxTouchPoints?: number;\r\n}\r\ndeclare const navigator: INavigator;\r\n\r\nconst isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n\t_userAgent = navigator.userAgent;\r\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\r\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\r\n} else if (typeof process === 'object') {\r\n\t_isWindows = (process.platform === 'win32');\r\n\t_isLinux = (process.platform === 'linux');\r\n}\r\n\r\n\r\nexport const isWindows = _isWindows;\r\nexport const isLinux = _isLinux;\r\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n\nimport { saveHosts, selectedConfig } from './actions/hosts'\nimport { updateDefaultHosts } from './actions/config'\nimport * as path from './actions/path'\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"switch-hosts\" is now active!');\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposableSaveConfig = vscode.commands.registerCommand('switch-hosts.saveConfig', ()=>{\n\t\t// The code you place here will be executed every time your command is executed\n\n\t\tsaveHosts(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\n\tlet disposableSelectedConfig = vscode.commands.registerCommand('switch-hosts.selectedConfig', async () => {\n\t\tselectedConfig(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\tlet disposableUpdateDefaultHosts = vscode.commands.registerCommand('switch-hosts.updateDefaultHosts', async () => {\n\t\tupdateDefaultHosts(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\tlet disposableOpenHostsFile = vscode.commands.registerCommand('switch-hosts.openHostsFile', async () => {\n\t\tupdateDefaultHosts(context).catch((err: Error)=> {\n\t\t\tvscode.window.showErrorMessage(err.message)\n\t\t})\n\t});\n\n\tcontext.subscriptions.push(disposableSaveConfig, disposableSelectedConfig, disposableUpdateDefaultHosts, disposableOpenHostsFile);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"util\");","module.exports = require(\"vscode\");"],"sourceRoot":""}